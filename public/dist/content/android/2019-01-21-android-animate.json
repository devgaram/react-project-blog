{"layout":"post-content","title":"안드로이드에서 이미지 애니메이션 구현 방법","date":"2019-01-21T00:00:00.000Z","tags":["android","animation"],"category":["android"],"body":"<p>이미지 애니메이션 구현 방법에는 다음과 같이 1)Animation Drawable과 2)Animated vector Drawable 두가지 옵션이 있다.</p>\n<hr>\n<p><a href=\"https://developer.android.com/guide/topics/graphics/drawable-animation?hl=ko\">안드로이드 개발문서-Animate drwable graphics 바로가기</a>\n<a href=\"https://www.androiddesignpatterns.com/2016/11/introduction-to-icon-animation-techniques.html\">Icon Animation 참고 문서</a></p>\n<p><strong>Animation Drawable</strong> : 몇 개의 정적 drawable 파일들을 순차적으로 보여주는 방식으로 애니메이션을 구현하고 싶을 때(프레임 애니메이션)<br>\n<strong>AnimatedVectorDrawable</strong> : 하나의 아이콘이 다른 이미지로 서서히 변화되는(morph) 애니메이션을 구현하고 싶을 때</p>\n<h1>AnimationDrawable 사용하기</h1>\n<p>프레임 애니메이션 구현 <a href=\"https://github.com/devgaram/AndroidBudgeter/blob/master/app/src/main/res/drawable/ani_emotion.xml\">예제</a></p>\n<p>res/drawable/ani_emotion.xml</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">animation-list</span> <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>\n    <span class=\"hljs-attr\">android:oneshot</span>=<span class=\"hljs-string\">\"false\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span> <span class=\"hljs-attr\">android:drawable</span>=<span class=\"hljs-string\">\"@drawable/emotion_mouth_1\"</span> <span class=\"hljs-attr\">android:duration</span>=<span class=\"hljs-string\">\"5000\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span> <span class=\"hljs-attr\">android:drawable</span>=<span class=\"hljs-string\">\"@drawable/emotion_mouth_2\"</span> <span class=\"hljs-attr\">android:duration</span>=<span class=\"hljs-string\">\"5000\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span> <span class=\"hljs-attr\">android:drawable</span>=<span class=\"hljs-string\">\"@drawable/emotion_mouth_3\"</span> <span class=\"hljs-attr\">android:duration</span>=<span class=\"hljs-string\">\"5000\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span> <span class=\"hljs-attr\">android:drawable</span>=<span class=\"hljs-string\">\"@drawable/emotion_mouth_4\"</span> <span class=\"hljs-attr\">android:duration</span>=<span class=\"hljs-string\">\"5000\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span> <span class=\"hljs-attr\">android:drawable</span>=<span class=\"hljs-string\">\"@drawable/emotion_mouth_5\"</span> <span class=\"hljs-attr\">android:duration</span>=<span class=\"hljs-string\">\"5000\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">animation-list</span>&gt;</span>\n</code></pre>\n<p><span class=\"li-icon\"><code class=\"codetainer\">android:oneshot</code> : true 한번만, false 반복</span></p>\n<p>res/drawable/emotion_mouth_1.xml</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">layer-list</span> <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">item</span>\n        <span class=\"hljs-attr\">android:top</span>=<span class=\"hljs-string\">\"@dimen/mb_l\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">shape</span>\n            <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>\n            <span class=\"hljs-attr\">android:shape</span>=<span class=\"hljs-string\">\"rectangle\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">size</span>\n                <span class=\"hljs-attr\">android:width</span>=<span class=\"hljs-string\">\"120dp\"</span>\n                <span class=\"hljs-attr\">android:height</span>=<span class=\"hljs-string\">\"60dp\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">size</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">solid</span> <span class=\"hljs-attr\">android:color</span>=<span class=\"hljs-string\">\"@color/colorDefaultFont\"</span>/&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">corners</span>\n                <span class=\"hljs-attr\">android:topRightRadius</span>=<span class=\"hljs-string\">\"60dp\"</span>\n                <span class=\"hljs-attr\">android:topLeftRadius</span>=<span class=\"hljs-string\">\"60dp\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">corners</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">shape</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">item</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">layer-list</span>&gt;</span>\n</code></pre>\n<p><span class=\"li-icon\">ShapeDrawable로 입모양 그린 XML 파일</span></p>\n<p>res/drawable/activity_main.xml</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ImageView</span>\n            <span class=\"hljs-attr\">android:id</span>=<span class=\"hljs-string\">\"@+id/emotion_mouth\"</span>\n            <span class=\"hljs-attr\">android:layout_width</span>=<span class=\"hljs-string\">\"wrap_content\"</span>\n            <span class=\"hljs-attr\">android:layout_height</span>=<span class=\"hljs-string\">\"wrap_content\"</span>\n            <span class=\"hljs-attr\">android:layout_gravity</span>=<span class=\"hljs-string\">\"center\"</span>\n            <span class=\"hljs-attr\">android:src</span>=<span class=\"hljs-string\">\"@drawable/ani_emotion\"</span> /&gt;</span>\n</code></pre>\n<p>MainActivity.java</p>\n<pre><code class=\"language-java\">AnimationDrawable emotionAnimation;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">onCreate</span><span class=\"hljs-params\">(Bundle savedInstanceState)</span> </span>{\n  <span class=\"hljs-keyword\">super</span>.onCreate(savedInstanceState);\n  setContentView(R.layout.main);\n\n  ImageView emotionImage  = (ImageView) findViewById(R.id.emotion_mouth);\n  emotionImage.setImageResource(R.drawable.ani_emotion);\n  emotionAnimation = (AnimationDrawable) emotionImage.getDrawable();\n\n  emotionImage.setOnClickListener(<span class=\"hljs-keyword\">new</span> View.OnClickListener() {\n      <span class=\"hljs-meta\">@Override</span>\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">onClick</span><span class=\"hljs-params\">(View view)</span> </span>{\n        emotionAnimation.start();\n      }\n  });\n}\n</code></pre>\n<p><span class=\"clr-note\"><strong>Note:</strong> </span><span class=\"clr-grey\"><code class=\"codetainer\">onCreate()</code> 메서드에선 <code class=\"codetainer\">AnimationDrawable</code>가 완전히 로드되지 않으므로 <code class=\"codetainer\">start()</code> 메서드를 사용할 수 없고,\n만약 애니메이션 즉시 실행을 원한다면 액티비티의 <code class=\"codetainer\">onStart()</code> 메서드에서 <code class=\"codetainer\">start()</code> 메서드를 호출해야한다.</span></p>\n<h1>AnimatedVectorDrawable 사용하기</h1>\n<p><a href=\"https://developer.android.com/reference/android/graphics/drawable/AnimatedVectorDrawable?hl=ko\">안드로이드 개발문서-AnimatedVectorDrawable 바로가기</a></p>\n<p>vectorDrawable은 흐려지거나 픽셀화되는 현상 없이 확장가능한 드로어블 타입이다.<br>\nvectorDrawable 애니메이션을 구현하기 위해서는 3개의 xml 파일이 필요하다.</p>\n<h2>1) vectorDrawable</h2>\n<table>\n<thead>\n<tr>\n<th>Element Name</th>\n<th>Animatable attribute name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&lt;vector&gt;</code></td>\n<td>alpha</td>\n</tr>\n<tr>\n<td><code>&lt;group&gt;</code></td>\n<td>rotation, pivotX, pivotY, scaleX, scaleY, translateX, translateY</td>\n</tr>\n<tr>\n<td><code>&lt;path&gt;</code></td>\n<td>pathData, fillColor, strokeColor, strokeColor, strokeWidth, strokeAlpha, fillAlpha, trimPathStart, trimPathEnd, trimPathOffset</td>\n</tr>\n<tr>\n<td><code>&lt;clip-path&gt;</code></td>\n<td>pathData</td>\n</tr>\n</tbody>\n</table>\n<pre><code class=\"language-xml\"> <span class=\"hljs-comment\">&lt;!--res/drawable/vectordrawable.xml--&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">vector</span> <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>\n     <span class=\"hljs-attr\">android:height</span>=<span class=\"hljs-string\">\"64dp\"</span>\n     <span class=\"hljs-attr\">android:width</span>=<span class=\"hljs-string\">\"64dp\"</span>\n     <span class=\"hljs-attr\">android:viewportHeight</span>=<span class=\"hljs-string\">\"600\"</span>\n     <span class=\"hljs-attr\">android:viewportWidth</span>=<span class=\"hljs-string\">\"600\"</span> &gt;</span>\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">group</span>\n         <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"rotationGroup\"</span>\n         <span class=\"hljs-attr\">android:pivotX</span>=<span class=\"hljs-string\">\"300.0\"</span>\n         <span class=\"hljs-attr\">android:pivotY</span>=<span class=\"hljs-string\">\"300.0\"</span>\n         <span class=\"hljs-attr\">android:rotation</span>=<span class=\"hljs-string\">\"45.0\"</span> &gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">path</span>\n             <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"v\"</span>\n             <span class=\"hljs-attr\">android:fillColor</span>=<span class=\"hljs-string\">\"#000000\"</span>\n             <span class=\"hljs-attr\">android:pathData</span>=<span class=\"hljs-string\">\"M300,70 l 0,-70 70,70 0,0 -70,70z\"</span> /&gt;</span>\n     <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">group</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">vector</span>&gt;</span>\n</code></pre>\n<h2>2) AnimatedVectorDrawable</h2>\n<p><span class=\"li-nonicon\">한 개의 <code>android:drawable</code> 속성과 하나 이상의 <code>&lt;target&gt;</code>을 가진다.</span>\n<span class=\"li-nonicon\"><code>&lt;target&gt;</code> 은 <code>android:name</code> 속성으로 <code>ObjectAnimator</code> 또는 <code>AnimatorSet</code>의 타겟이 되는 <code>vectorDrawable</code>을 명시한다.\n<span class=\"clr-grey\"><strong>Note:</strong> 타겟은 vectorDrawable의 group element 또는 path element가 될 수 있다.</span></span></p>\n<pre><code class=\"language-xml\"><span class=\"hljs-comment\">&lt;!--res/drawable/animatedVector.xml--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">animated-vector</span> <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>\n     <span class=\"hljs-attr\">android:drawable</span>=<span class=\"hljs-string\">\"@drawable/vectordrawable\"</span> &gt;</span>\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">target</span>\n         <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"rotationGroup\"</span>\n         <span class=\"hljs-attr\">android:animation</span>=<span class=\"hljs-string\">\"@animator/rotation\"</span> /&gt;</span>\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">target</span>\n         <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"v\"</span>\n         <span class=\"hljs-attr\">android:animation</span>=<span class=\"hljs-string\">\"@animator/path_morph\"</span> /&gt;</span>\n <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">animated-vector</span>&gt;</span>\n</code></pre>\n<p><span class=\"li-icon\">vectorDrawable에서 rotationGroup 이름 속성을 가진 <code>&lt;group&gt;</code> 엘리먼트에 rotation 애니메이션을 적용</span>\n<span class=\"li-icon\">vectorDrawable에서 v 이름 속성을 가진 <code>&lt;path&gt;</code> 엘리먼트에 path_morph 애니메이션을 적용</span></p>\n<h2>3) ObjectAnimator or AnimatorSet 애니메이션 정의</h2>\n<p>애니메이션은 <code>ObjectAnimator</code> 와 <code>AnimatorSet</code>으로 정의할 수 있다.</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-comment\">&lt;!-- res/animator/rotation.xml --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">objectAnimator</span>\n    <span class=\"hljs-attr\">android:duration</span>=<span class=\"hljs-string\">\"6000\"</span>\n    <span class=\"hljs-attr\">android:propertyName</span>=<span class=\"hljs-string\">\"rotation\"</span>\n    <span class=\"hljs-attr\">android:valueFrom</span>=<span class=\"hljs-string\">\"0\"</span>\n    <span class=\"hljs-attr\">android:valueTo</span>=<span class=\"hljs-string\">\"360\"</span> /&gt;</span>\n</code></pre>\n<p>6초동안 360도 회전하는 애니메이션</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-comment\">&lt;!-- res/animator/path_morph.xml --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">set</span> <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">objectAnimator</span>\n        <span class=\"hljs-attr\">android:duration</span>=<span class=\"hljs-string\">\"3000\"</span>\n        <span class=\"hljs-attr\">android:propertyName</span>=<span class=\"hljs-string\">\"pathData\"</span>\n        <span class=\"hljs-attr\">android:valueFrom</span>=<span class=\"hljs-string\">\"M300,70 l 0,-70 70,70 0,0   -70,70z\"</span>\n        <span class=\"hljs-attr\">android:valueTo</span>=<span class=\"hljs-string\">\"M300,70 l 0,-70 70,0  0,140 -70,0 z\"</span>\n        <span class=\"hljs-attr\">android:valueType</span>=<span class=\"hljs-string\">\"pathType\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">set</span>&gt;</span>\n</code></pre>\n<p>3초동안 모양 바뀌는 애니메이션(morph)<br>\n<span class=\"clr-note\"><strong>Note:</strong> <code>android:valueFrom</code> 과 <code>android:valueTo</code>의 명령 순서와 파라미터 값은 동일해야한다.</span><br>\n<span class=\"clr-grey\"><strong>Note:</strong>  path 값은 string 리소스에 저장하는 것을 추천한다.</span></p>\n<h2>4) 3개의 xml을 AAPT 툴의 지원으로 하나의 xml에 정의할 수 있다.</h2>\n<pre><code class=\"language-xml\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">animated-vector</span> <span class=\"hljs-attr\">xmlns:android</span>=<span class=\"hljs-string\">\"http://schemas.android.com/apk/res/android\"</span>\n                  <span class=\"hljs-attr\">xmlns:aapt</span>=<span class=\"hljs-string\">\"http://schemas.android.com/aapt\"</span> &gt;</span>\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">aapt:attr</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"android:drawable\"</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">vector</span>\n             <span class=\"hljs-attr\">android:height</span>=<span class=\"hljs-string\">\"64dp\"</span>\n             <span class=\"hljs-attr\">android:width</span>=<span class=\"hljs-string\">\"64dp\"</span>\n             <span class=\"hljs-attr\">android:viewportHeight</span>=<span class=\"hljs-string\">\"600\"</span>\n             <span class=\"hljs-attr\">android:viewportWidth</span>=<span class=\"hljs-string\">\"600\"</span> &gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">group</span>\n                 <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"rotationGroup\"</span>\n                 <span class=\"hljs-attr\">android:pivotX</span>=<span class=\"hljs-string\">\"300.0\"</span>\n                 <span class=\"hljs-attr\">android:pivotY</span>=<span class=\"hljs-string\">\"300.0\"</span>\n                 <span class=\"hljs-attr\">android:rotation</span>=<span class=\"hljs-string\">\"45.0\"</span> &gt;</span>\n                 <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">path</span>\n                     <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"v\"</span>\n                     <span class=\"hljs-attr\">android:fillColor</span>=<span class=\"hljs-string\">\"#000000\"</span>\n                     <span class=\"hljs-attr\">android:pathData</span>=<span class=\"hljs-string\">\"M300,70 l 0,-70 70,70 0,0 -70,70z\"</span> /&gt;</span>\n             <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">group</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">vector</span>&gt;</span>\n     <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">aapt:attr</span>&gt;</span>\n\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">target</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"rotationGroup\"</span>&gt;</span> *\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">aapt:attr</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"android:animation\"</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">objectAnimator</span>\n             <span class=\"hljs-attr\">android:duration</span>=<span class=\"hljs-string\">\"6000\"</span>\n             <span class=\"hljs-attr\">android:propertyName</span>=<span class=\"hljs-string\">\"rotation\"</span>\n             <span class=\"hljs-attr\">android:valueFrom</span>=<span class=\"hljs-string\">\"0\"</span>\n             <span class=\"hljs-attr\">android:valueTo</span>=<span class=\"hljs-string\">\"360\"</span> /&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">aapt:attr</span>&gt;</span>\n     <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">target</span>&gt;</span>\n\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">target</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"v\"</span> &gt;</span>\n         <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">aapt:attr</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"android:animation\"</span>&gt;</span>\n             <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">set</span>&gt;</span>\n                 <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">objectAnimator</span>\n                     <span class=\"hljs-attr\">android:duration</span>=<span class=\"hljs-string\">\"3000\"</span>\n                     <span class=\"hljs-attr\">android:propertyName</span>=<span class=\"hljs-string\">\"pathData\"</span>\n                     <span class=\"hljs-attr\">android:valueFrom</span>=<span class=\"hljs-string\">\"M300,70 l 0,-70 70,70 0,0 -70,70z\"</span>\n                     <span class=\"hljs-attr\">android:valueTo</span>=<span class=\"hljs-string\">\"M300,70 l 0,-70 70,0  0,140 -70,0 z\"</span>\n                     <span class=\"hljs-attr\">android:valueType</span>=<span class=\"hljs-string\">\"pathType\"</span>/&gt;</span>\n             <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">set</span>&gt;</span>\n         <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">aapt:attr</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">target</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">animated-vector</span>&gt;</span>\n</code></pre>\n<h2>5) 정의한 애니메이션 적용하기</h2>\n<p>res/drawable/activity_main.xml</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ImageView</span>\n            <span class=\"hljs-attr\">android:id</span>=<span class=\"hljs-string\">\"@+id/emotion_mouth\"</span>\n            <span class=\"hljs-attr\">android:layout_width</span>=<span class=\"hljs-string\">\"wrap_content\"</span>\n            <span class=\"hljs-attr\">android:layout_height</span>=<span class=\"hljs-string\">\"wrap_content\"</span>\n            <span class=\"hljs-attr\">android:layout_gravity</span>=<span class=\"hljs-string\">\"center\"</span>\n            <span class=\"hljs-attr\">android:src</span>=<span class=\"hljs-string\">\"@drawable/animatedVector\"</span> /&gt;</span>\n</code></pre>\n<p>MainActivity.java</p>\n<pre><code class=\"language-java\"> ImageView emotionImage;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">onCreate</span><span class=\"hljs-params\">(Bundle savedInstanceState)</span> </span>{\n  <span class=\"hljs-keyword\">super</span>.onCreate(savedInstanceState);\n  setContentView(R.layout.main);\n\n  emotionImage  = (ImageView) findViewById(R.id.emotion_mouth);\n  \n  emotionImage.setOnClickListener(<span class=\"hljs-keyword\">new</span> View.OnClickListener() {\n      <span class=\"hljs-meta\">@Override</span>\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">onClick</span><span class=\"hljs-params\">(View view)</span> </span>{\n        Drawable drawable = emotionImage.getDrawable();\n            <span class=\"hljs-keyword\">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) {\n                <span class=\"hljs-keyword\">if</span> (drawable <span class=\"hljs-keyword\">instanceof</span> AnimatedVectorDrawable) {\n                    AnimatedVectorDrawable animatedVectorDrawable = (AnimatedVectorDrawable) drawable;\n                    animatedVectorDrawable.start();\n                }\n            } <span class=\"hljs-keyword\">else</span> {\n                <span class=\"hljs-keyword\">if</span> (drawable <span class=\"hljs-keyword\">instanceof</span> AnimatedVectorDrawableCompat) {\n                    AnimatedVectorDrawableCompat animatedVectorDrawableCompat = (AnimatedVectorDrawableCompat) drawable;\n                    animatedVectorDrawableCompat.start();\n                }\n            }\n      }\n  });\n  \n}\n</code></pre>\n","updatedAt":"2020-01-22T18:23:54.379Z"}