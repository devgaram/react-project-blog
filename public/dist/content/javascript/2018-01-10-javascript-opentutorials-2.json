{"layout":"post-content","title":"(생활코딩) Javascript 입문2","date":"2018-01-10T00:00:00.000Z","tags":["javascript"],"category":["javascript"],"body":"<p>생활코딩 URL <a href=\"https://opentutorials.org/course/743/\">https://opentutorials.org/course/743/</a><br>\n반복문, 함수 정의방법, 배열, 객체</p>\n<hr>\n<h1>반복문</h1>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">for</span>( <span class=\"hljs-keyword\">var</span> i=<span class=\"hljs-number\">0</span>; i&lt;<span class=\"hljs-number\">10</span>; i++){\n    <span class=\"hljs-keyword\">if</span>( i === <span class=\"hljs-number\">5</span>) <span class=\"hljs-keyword\">break</span>;     <span class=\"hljs-comment\">// 그 즉시, for문 중단 - coding1~4 까지만 출력됨</span>\n    <span class=\"hljs-keyword\">if</span>( i === <span class=\"hljs-number\">5</span>) <span class=\"hljs-keyword\">continue</span>; <span class=\"hljs-comment\">// 실행을 중단하고 반복문 이어서 함. - coding1~4/6~9까지 출력됨.</span>\n    <span class=\"hljs-built_in\">document</span>.write(<span class=\"hljs-string\">\"coding\"</span>+i+<span class=\"hljs-string\">\"\"</span>);\n}\n</code></pre>\n<h1>함수 정의 방법</h1>\n<pre><code class=\"language-javascript\"><span class=\"hljs-comment\">// [첫번째 방법]</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">numbering</span>(<span class=\"hljs-params\">arg</span>)</span>{\n   <span class=\"hljs-comment\">//statement</span>\n}\n\n<span class=\"hljs-comment\">// [두번째 방법]</span>\n<span class=\"hljs-keyword\">var</span> numbering = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n <span class=\"hljs-comment\">//statement </span>\n }\n\n <span class=\"hljs-comment\">// [세번째 방법-익명함수]</span>\n (<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n    <span class=\"hljs-comment\">//statement </span>\n })();\n <span class=\"hljs-comment\">//*일회성 함수</span>\n</code></pre>\n<h1>배열</h1>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">var</span> member = [<span class=\"hljs-string\">'a'</span>, <span class=\"hljs-string\">'b'</span>, <span class=\"hljs-string\">'c'</span>];    <span class=\"hljs-comment\">//생성</span>\nalert(member[<span class=\"hljs-number\">0</span>]);                <span class=\"hljs-comment\">// 'a' </span>\n\n<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">var</span> i=<span class=\"hljs-number\">0</span>; i&lt;member.length; i++){    <span class=\"hljs-comment\">// 배열의 크기만큼 반복</span>\n  <span class=\"hljs-built_in\">document</span>.write(member[i].toUpperCase()) + <span class=\"hljs-string\">\"\"</span>;\n}\n<span class=\"hljs-comment\">/*배열의 원소 추가하는 방법*/</span>\nmember.push(<span class=\"hljs-string\">'f'</span>);        <span class=\"hljs-comment\">// a,b,c,f - 배열의 맨 뒤에 삽입</span>\nmember.concat([<span class=\"hljs-string\">'e'</span>,<span class=\"hljs-string\">'f'</span>]); <span class=\"hljs-comment\">// a,b,c,f,e,f - 복수의 원소 추가</span>\nmember.unshift(<span class=\"hljs-string\">'g'</span>);     <span class=\"hljs-comment\">// g,a,b,c,f,e,f - 배열의 맨 앞에 삽입</span>\nmember.splice(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">'B'</span>); <span class=\"hljs-comment\">// g,a,B,b,c,f,e,f - 배열의 2번째 인덱스 0(앞에) B를 추가</span>\n\n<span class=\"hljs-comment\">/*배열의 원소 삭제하는 방법 및 정렬 */</span>\nmember.shift();        <span class=\"hljs-comment\">// 배열의 첫번째 원소 삭제</span>\nmember.pop();        <span class=\"hljs-comment\">// 배열의 마지막 원소 삭제</span>\nmember.sort();        <span class=\"hljs-comment\">// 오름차순 정렬</span>\nmember.reverse();    <span class=\"hljs-comment\">// 내림차순 정렬</span>\n</code></pre>\n<h2>배열의 함수. splice</h2>\n<ul>\n<li>배열의 특정구간을 추출하거나, 특정 구간에 특정 배열을 추가한다.</li>\n<li>array.splice( index, howmany, [element1…N])<br>\n<span class=\"clr-grey\">\nindex : 배열의 위치<br>\nhowmany : index에서부터 제거될 원소의 수로, 1이면 index 값만 제거되어 값이 추가된다.<br>\n0일 때는 삭제 없이 인덱스 앞쪽에 값이 추가됨. 없으면 배열 끝까지(길이)<br>\nelement1…N : 추가될 Value\n</span></li>\n</ul>\n<h2>배열의 정렬. sort - 사용자정의가능</h2>\n<pre><code class=\"language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">sortNumber</span>(<span class=\"hljs-params\">a,b</span>)</span>{\n    <span class=\"hljs-keyword\">return</span> a-b;    <span class=\"hljs-comment\">//리턴값이 음수, 양수, 0인지에 따라 순서 정함.</span>\n}\n<span class=\"hljs-keyword\">var</span> numbers = [<span class=\"hljs-number\">20</span> ,<span class=\"hljs-number\">10</span> <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">15</span>]\nnumbers.sort(sortNumber); <span class=\"hljs-comment\">// 8,10,15,20</span>\n</code></pre>\n<h1>객체</h1>\n<p>배열 - 자동으로 색인 추가[number], 순서존재<br>\n객체 - 인덱스의 값을 숫자 뿐만 아니라 문자 등 원하는 이름으로 지정 가능 (데이터타입 : 연관배열, 맵, 딕셔너리), 순서존재X</p>\n<pre><code class=\"language-javascript\">/*객체의 생성*/\nvar grades = {'aa':10, 'bb':6, 'cc': 80};    //객체의 생성\nvar grades = {};    //비어있는 객체의 생성\nvar grades = new object();    //비어있는 객체의 생성\n\n/*객체의 할당*/\ngrades['aa'] = 10;\ngrades['bb'] = 6;\ngrades['cc'] = 80;\n\n/*객체의 접근 key/value*/\ngrades['bb']    //6\ngrades.bb       //6\ngrades['b'+'b'] //6\ngrades.'b'+'b';  //에러 남\n\n/*객체의 값 가져오기*/\nfor(var key in grades){    //객체를 구성하는 값들의 키값만 하나씩 가져옴\n document.write(\"key : \"+key+\" value : \"+grades[key] + \"\");\n}\n\n/*객체지향 프로그래밍 - 서로 연관된 데이터, 처리를 하나의 그릇안에 그룹핑 한것*/\nvar grades = {\n 'list' : {'aa':10, 'bb':6, 'cc': 80},\n 'show' : function(){\n      alert(\"hello world\"); \n  },\n'show2' : function(){\n      console.log(this.list);     //this란? 함수가 속해있는 객체를 가리킨다. 여기선 grades를 가리킴.\n },\n'show_list' : function(){\n  for(var name in this.list){\n   console.log(name,  this.list[name]);\n  }\n }\n}\nalert(grades['list]['aa']); //10\ngrades['show']();       //객체의 함수호출. alert창 뜸.\ngrades.show_list();    //객체의 함수호출 aa,10 bb,6 cc,80 출력\n</code></pre>\n","updatedAt":"2020-01-22T18:21:09.422Z"}