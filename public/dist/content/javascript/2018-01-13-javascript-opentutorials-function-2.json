{"layout":"post-content","title":"(생활코딩) javascript 함수지향2","date":"2018-01-13T00:00:00.000Z","tags":["javascript"],"category":["javascript"],"body":"<p>생활코딩 함수지향 파트 중 값으로서의 함수와 콜백에 대한 내용을 정리했습니다.</p>\n<hr>\n<h1>1. 값으로서 함수</h1>\n<p>예제1) 자바스크립트에서는 함수도 객체이며, 함수도 값이 될 수 있다.</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">a</span>(<span class=\"hljs-params\"></span>)</span>{}     <span class=\"hljs-comment\">//함수는 a라는 변수에 담겨진 값.</span>\n<span class=\"hljs-keyword\">var</span> a = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{}\n</code></pre>\n<p>예제2) 함수는 객체 안에 저장될 수 있다.</p>\n<pre><code class=\"language-javascript\">a = {\n   <span class=\"hljs-attr\">b</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n   }\n}\n</code></pre>\n<p>b는 key, 객체 안에서 변수 역할(어떤 값을 저장하고 있기 때문) = 속성(property)<br>\n속성에 저장된 값이 함수면 메소드라 부름.<br>\n즉, a라는 객체에 b라는 속성이 있는데, 이 속성의 값은 함수(메소드)다.</p>\n<p>예제3) 함수는 변수, 객체에 저장될 수 있고 인자로도 사용할 수 있다.</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">cal</span> (<span class=\"hljs-params\">func, num</span>)</span>{\n   <span class=\"hljs-keyword\">return</span> func(num)\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">increase</span> (<span class=\"hljs-params\">num</span>)</span>{\n   <span class=\"hljs-keyword\">return</span> num+<span class=\"hljs-number\">1</span>;\n}\nalert (cal (increase, <span class=\"hljs-number\">1</span>) );\n\n<span class=\"hljs-comment\">// 위 코드는 아래와 같이 해석될 수 있다.</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">cal</span> (<span class=\"hljs-params\"> func, num</span>)</span>{\n   <span class=\"hljs-keyword\">var</span> func = increase (num){\n       <span class=\"hljs-keyword\">return</span> num+<span class=\"hljs-number\">1</span>\n   }\n}\n<span class=\"hljs-comment\">// 즉, func(1) =&gt; 2가 출력됨.</span>\n</code></pre>\n<p>예제4) 함수를 리턴 값으로도 사용할 수 있다.</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">cal</span> (<span class=\"hljs-params\">mode</span>)</span>{\n val funcs = {\n  <span class=\"hljs-string\">'plus'</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">left, right</span>) </span>{ <span class=\"hljs-keyword\">return</span> left + right },\n  <span class=\"hljs-string\">'minus'</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">left, right</span>) </span>{ <span class=\"hljs-keyword\">return</span> left - right }\n }\n <span class=\"hljs-keyword\">return</span> funcs[mode];\n}\nalert (cal(<span class=\"hljs-string\">'plus'</span>)(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>));\n</code></pre>\n<p>return funcs[‘plus’] 는 funcs 객체의 plus 속성의 값인 function(left, right) {return left+right} 메소드를 리턴시킨다.<br>\ncal(‘plus’)(2,1)은 cal(‘plus’)함수의 인자 값으로 2, 1을 전달하겠다는 의미이다.<br>\ncal(‘plus’)는 function(left, right) {return left+right} 이므로 알럿창에 3이 뜬다.</p>\n<p>예제5) 함수를 배열의 값으로 사용할 수 있다.</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">var</span> process = [\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">input</span>) </span>{<span class=\"hljs-keyword\">return</span> input + <span class=\"hljs-number\">10</span>;},\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">input</span>) </span>{<span class=\"hljs-keyword\">return</span> input * input;},\n   <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">input</span>) </span>{<span class=\"hljs-keyword\">return</span> input / <span class=\"hljs-number\">2</span>;}\n];\n<span class=\"hljs-keyword\">var</span> input = <span class=\"hljs-number\">1</span>;\n<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i  &lt; process.length; i++)\n   input = process[i](input);\n\nalert(input); <span class=\"hljs-comment\">//60.5</span>\n</code></pre>\n<h1>2. 콜백</h1>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">var</span> numbers = [<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>];\nnumbers.sort();    <span class=\"hljs-comment\">// numbers는 배열객체, sort()는 메소드(내장메소드)</span>\n<span class=\"hljs-built_in\">console</span>.log(numbers) <span class=\"hljs-comment\">// 1, 10, 2, 20, 3, 4, 5, 6, 7, 8, 9 - 문자 기준으로 정렬한 듯.</span>\n</code></pre>\n<span class=\"clr-grey\">\nsort()    \narray.sort (sortfunc)    \n반환값 : 정렬된 배열\n</span>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">var</span> numbers = [<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>];\n<span class=\"hljs-keyword\">var</span> sortfunc = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>)</span>{\n    <span class=\"hljs-keyword\">if</span>(a &gt; b)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(a &lt; b)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n    <span class=\"hljs-keyword\">else</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n<span class=\"hljs-keyword\">var</span> sortfunc = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>)</span>{\n    <span class=\"hljs-keyword\">return</span> a-b;    <span class=\"hljs-comment\">//역순은 return b-a;</span>\n}   \n    numbers.sort(sortfunc);    <span class=\"hljs-comment\">// 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20</span>\n</code></pre>\n<p>sortfunc가 콜백함수가 된다.<br>\n함수는 값으로서 사용할 수 있기 때문에 sortfunc를 sort에 인자로 전달함으로서 sort 메소드를 사용자가 원하는 방식으로 바꿀 수 있다.</p>\n<p><span class=\"clr-note\">**콜백은 비동기처리에서 유용하게 사용된다.</span></p>\n","updatedAt":"2020-01-22T18:21:09.421Z"}