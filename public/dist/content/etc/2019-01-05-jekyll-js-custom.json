{"layout":"post-content","title":"jekyll의 minimal-mistakes에서 자바스크립트 커스텀하는 방법","date":"2019-01-05T00:00:00.000Z","tags":["jekyll","github"],"category":["jekyll"],"body":"<p>minimal-mistakes 테마를 적용한 jekyll 블로그를 커스텀하는 과정에서 자바스크립트 코드를 추가하는 방법입니다.<br>\nminimal-mistakes 문서에 자바스크립트 커스텀 방법이 잘 정리되어있습니다.\n<a href=\"https://mmistakes.github.io/minimal-mistakes/docs/javascript/\">공식문서 바로가기</a>.</p>\n<hr>\n<p>우리가 수정해야 할 파일은 /assets/js/ 에 위치한 _main.js 파일입니다.<br>\n하지만, jekyll은 _main.js 파일이 아닌 main.min.js 파일을 컴파일하여 화면에 반영합니다.<br>\nmain.min.js 는 _main.js 자바스크립트 코드를 압축화하고 난독화한 파일로 npm 패키지 중 하나인 uglify를 이용하여 만들 수 있습니다.</p>\n<h2>1. npm 셋팅</h2>\n<pre><code>&gt; npm init\n</code></pre>\n<p>블로그 프로젝트 디렉토리 위치에서 위 코드를 실행시키면 package.json 파일이 생성됩니다.</p>\n<h2>2. package.json 파일 수정</h2>\n<p><a href=\"https://github.com/mmistakes/minimal-mistakes/blob/master/package.json\">https://github.com/mmistakes/minimal-mistakes/blob/master/package.json</a>\npackage.json 파일을 아래와 같이 수정합니다.</p>\n<pre><code class=\"language-json\">{\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"minimal-mistakes\"</span>,\n  <span class=\"hljs-attr\">\"version\"</span>: <span class=\"hljs-string\">\"4.14.2\"</span>,\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Minimal Mistakes 2 column Jekyll theme.\"</span>,\n  <span class=\"hljs-attr\">\"repository\"</span>: {\n    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"git\"</span>,\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"git://github.com/mmistakes/minimal-mistakes.git\"</span>\n  },\n  <span class=\"hljs-attr\">\"keywords\"</span>: [\n    <span class=\"hljs-string\">\"jekyll\"</span>,\n    <span class=\"hljs-string\">\"theme\"</span>,\n    <span class=\"hljs-string\">\"minimal\"</span>\n  ],\n  <span class=\"hljs-attr\">\"author\"</span>: <span class=\"hljs-string\">\"Michael Rose\"</span>,\n  <span class=\"hljs-attr\">\"license\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n  <span class=\"hljs-attr\">\"bugs\"</span>: {\n    <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.com/mmistakes/minimal-mistakes/issues\"</span>\n  },\n  <span class=\"hljs-attr\">\"homepage\"</span>: <span class=\"hljs-string\">\"https://mmistakes.github.io/minimal-mistakes/\"</span>,\n  <span class=\"hljs-attr\">\"engines\"</span>: {\n    <span class=\"hljs-attr\">\"node\"</span>: <span class=\"hljs-string\">\"&gt;= 0.10.0\"</span>\n  },\n  <span class=\"hljs-attr\">\"devDependencies\"</span>: {\n    <span class=\"hljs-attr\">\"npm-run-all\"</span>: <span class=\"hljs-string\">\"^4.1.5\"</span>,\n    <span class=\"hljs-attr\">\"onchange\"</span>: <span class=\"hljs-string\">\"^5.1.3\"</span>,\n    <span class=\"hljs-attr\">\"uglify-js\"</span>: <span class=\"hljs-string\">\"^3.4.9\"</span>\n  },\n  <span class=\"hljs-attr\">\"scripts\"</span>: {\n    <span class=\"hljs-attr\">\"uglify\"</span>: <span class=\"hljs-string\">\"uglifyjs assets/js/vendor/jquery/jquery-3.3.1.min.js assets/js/plugins/jquery.fitvids.js assets/js/plugins/jquery.greedy-navigation.js assets/js/plugins/jquery.magnific-popup.js assets/js/plugins/jquery.smooth-scroll.min.js assets/js/_main.js -c -m -o assets/js/main.min.js\"</span>,\n    <span class=\"hljs-attr\">\"add-banner\"</span>: <span class=\"hljs-string\">\"node banner.js\"</span>,\n    <span class=\"hljs-attr\">\"watch:js\"</span>: <span class=\"hljs-string\">\"onchange \\\"assets/js/**/*.js\\\" -e \\\"assets/js/main.min.js\\\" -- npm run build:js\"</span>,\n    <span class=\"hljs-attr\">\"build:js\"</span>: <span class=\"hljs-string\">\"npm run uglify &amp;&amp; npm run add-banner\"</span>\n  }\n}\n</code></pre>\n<h2>3. uglify 설치 및 실행</h2>\n<p>uglify-js 패키지 설치</p>\n<pre><code>&gt; npm install uglify-js\n</code></pre>\n<p>package.json의 scripts 부분을 보면 build:js 스크립트 실행시 <strong>npm run uglify &amp;&amp; npm run add-banner</strong> 를 실행하도로 되어있습니다.\n이를 참고하여 cmd에서 <code class=\"codetainer\">npm run build:js</code>를 실행해봅시다. 정상적으로 _main.js 파일이 main.min.js로 압축된 것을 확인할 수 있을 것입니다.</p>\n<h2>4. jekyll serve 실행</h2>\n<p>이미 서버가 실행되어있다면 자동으로 반영됩니다.<br>\n그렇지 않다면 다시 <strong>jekyll serve</strong> 를 통해 서버를 실행해주면 커스텀한 자바스크립트 코드가 반영된 것을 확인할 수 있습니다.</p>\n","updatedAt":"2020-01-22T18:24:11.358Z"}