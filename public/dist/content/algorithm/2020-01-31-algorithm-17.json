{"layout":"post-content","title":"백준 - 17779 게리멘더링2(C++)","date":"2020-01-31T00:00:00.000Z","categories":["algorithm"],"body":"<h2>생각의 흐름</h2>\n<ul>\n<li>x, y, d1, d2를 정해야되서 4중 포문을 써야지… 시간 초과가 나려나… 일단 해본 후에 최적화하자 --&gt; 시간 초과 발생하지 않음</li>\n</ul>\n<pre><code class=\"language-cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;algorithm&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-keyword\">int</span> N;\n<span class=\"hljs-keyword\">int</span> total = <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-keyword\">int</span> A[<span class=\"hljs-number\">21</span>][<span class=\"hljs-number\">21</span>]; <span class=\"hljs-comment\">// 인풋용</span>\n<span class=\"hljs-keyword\">int</span> C[<span class=\"hljs-number\">21</span>][<span class=\"hljs-number\">21</span>]; <span class=\"hljs-comment\">// 각 구역 표시 용도</span>\n<span class=\"hljs-keyword\">int</span> S[<span class=\"hljs-number\">6</span>] ={<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>}; <span class=\"hljs-comment\">// 1~5 구역 인구수 합 표시</span>\n<span class=\"hljs-keyword\">int</span> prow[<span class=\"hljs-number\">4</span>] = {<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>};\n<span class=\"hljs-keyword\">int</span> pcol[<span class=\"hljs-number\">4</span>]= {<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">1</span>};\n<span class=\"hljs-keyword\">int</span> ans = <span class=\"hljs-number\">40001</span>;\n\n<span class=\"hljs-comment\">// 구역 그리기</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">dfs</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> sx, <span class=\"hljs-keyword\">int</span> sy, <span class=\"hljs-keyword\">int</span> ex, <span class=\"hljs-keyword\">int</span> ey, <span class=\"hljs-keyword\">int</span> area)</span> </span>{\n <span class=\"hljs-comment\">// 좌표가 범위 밖인 경우</span>\n <span class=\"hljs-keyword\">if</span> (sx &lt; <span class=\"hljs-number\">1</span> || sy &lt; <span class=\"hljs-number\">1</span> || sx &gt; ex || sy &gt; ey) <span class=\"hljs-keyword\">return</span>;\n <span class=\"hljs-keyword\">if</span> (C[sx][sy] &gt; <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span>; <span class=\"hljs-comment\">// 이미 다른 구역인 경우</span>\n S[area] += A[sx][sy]; <span class=\"hljs-comment\">// 인구 수 더하기</span>\n C[sx][sy] = area; <span class=\"hljs-comment\">// 구역 방문했다는 표시</span>\n <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;<span class=\"hljs-number\">4</span>; i++) { <span class=\"hljs-comment\">// 상하좌우</span>\n  dfs(sx + prow[i], sy + pcol[i], ex, ey, area); \n }\n}\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">dividearea</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> x, <span class=\"hljs-keyword\">int</span> y, <span class=\"hljs-keyword\">int</span> d1, <span class=\"hljs-keyword\">int</span> d2)</span> </span>{\n <span class=\"hljs-keyword\">int</span> tx, ty;\n <span class=\"hljs-built_in\">memset</span>(C, <span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">sizeof</span>(C));\n <span class=\"hljs-built_in\">memset</span>(S, <span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">sizeof</span>(S));\n  \n <span class=\"hljs-comment\">/* 경계선 그리기 */</span>\n <span class=\"hljs-comment\">// 경계선 1, 4번 조건</span>\n <span class=\"hljs-keyword\">for</span> (tx=x, ty=y; tx&lt;=x+d1 &amp;&amp; ty&gt;=y-d1; tx++, ty--) {\n  C[tx][ty] = <span class=\"hljs-number\">5</span>, C[tx+d2][ty+d2] = <span class=\"hljs-number\">5</span>;\n  S[<span class=\"hljs-number\">5</span>] += A[tx][ty] + A[tx+d2][ty+d2];\n }\n <span class=\"hljs-comment\">// 경계선 2, 3번 조건</span>\n <span class=\"hljs-keyword\">for</span> (tx=x, ty=y; tx&lt;=x+d2 &amp;&amp; ty&lt;=y+d2; tx++, ty++) {\n  C[tx][ty] = <span class=\"hljs-number\">5</span>, C[tx+d1][ty-d1] = <span class=\"hljs-number\">5</span>;\n  S[<span class=\"hljs-number\">5</span>] += A[tx][ty] + A[tx+d1][ty-d1];\n }\n\n <span class=\"hljs-comment\">// 각 구역 인구수 세기</span>\n <span class=\"hljs-comment\">// 문제에서 주어진 조건대로 시작 좌표와 종료 좌표 입력</span>\n dfs(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, x+d1<span class=\"hljs-number\">-1</span>, y, <span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">// 1번 구역</span>\n dfs(<span class=\"hljs-number\">1</span>, y+<span class=\"hljs-number\">1</span>, x+d2, N, <span class=\"hljs-number\">2</span>); <span class=\"hljs-comment\">// 2번 구역</span>\n dfs(N, <span class=\"hljs-number\">1</span>, N, y-d1+d2<span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">3</span>); <span class=\"hljs-comment\">// 3번 구역</span>\n dfs(N, N, N, N, <span class=\"hljs-number\">4</span>); <span class=\"hljs-comment\">// 4번 구역</span>\n \n <span class=\"hljs-comment\">// 경계선 내부 인구수 계산</span>\n <span class=\"hljs-comment\">// 위 dfs로 인해 S[]에 인구수 합이 있으므로 얘를 이용하면 경계선 내부 인구 수 알 수 있다.</span>\n <span class=\"hljs-keyword\">int</span> inside= total;\n <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>; i&lt;=<span class=\"hljs-number\">5</span>; i++) {\n  inside -= S[i];\n }\n S[<span class=\"hljs-number\">5</span>] += inside;\n\n <span class=\"hljs-comment\">// 최댓값, 최솟값, 정답 구하기</span>\n <span class=\"hljs-keyword\">int</span> largest = <span class=\"hljs-number\">0</span>, smallest = <span class=\"hljs-number\">40001</span>;\n <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>; i&lt;=<span class=\"hljs-number\">5</span>; i++) {\n  largest = max(largest, S[i]);\n   smallest = min(smallest, S[i]);\n }\n ans = min(ans, largest - smallest);\n  \n}\n\n<span class=\"hljs-comment\">// x, y, d1, d2 구하기 == 경계썬 구하기</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">selectval</span><span class=\"hljs-params\">()</span> </span>{\n <span class=\"hljs-keyword\">int</span> x, y, d1, d2;\n <span class=\"hljs-keyword\">for</span> (x=<span class=\"hljs-number\">1</span>; x&lt;=N; x++) {\n  <span class=\"hljs-keyword\">for</span> (y=<span class=\"hljs-number\">1</span>; y&lt;=N; y++) {\n   <span class=\"hljs-keyword\">for</span> (d1=<span class=\"hljs-number\">1</span>; d1&lt;N; d1++) {\n    <span class=\"hljs-keyword\">for</span> (d2=<span class=\"hljs-number\">1</span>; d2&lt;N; d2++) {\n     <span class=\"hljs-keyword\">if</span> (x + d1 + d2 &lt;= N &amp;&amp; <span class=\"hljs-number\">1</span> &lt;= y - d1 &amp;&amp; y + d2 &lt;= N) {\n      dividearea(x, y, d1, d2);\n     } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">break</span>;\n    }\n   }\n  }\n }\n}\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">\"%d\"</span>, &amp;N);\n <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>; i&lt;=N; i++) {\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">1</span>; j&lt;=N; j++) {\n   <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">\"%d\"</span>, &amp;A[i][j]);\n   total += A[i][j]; <span class=\"hljs-comment\">// 나중에 경계선 내부 인구 수 계산할 때 쓰려고 전체 인구수를 저장해놓음</span>\n  }\n }\n selectval();\n <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">\"%d\"</span>, ans);\n <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n\n</code></pre>\n","updatedAt":"2020-01-31T06:03:57.867Z"}