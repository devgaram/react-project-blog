{"layout":"post-content","title":"백준 - 16235 나무 재테크(C++)","date":"2020-01-28T00:00:00.000Z","categories":["algorithm"],"body":"<h1>나무 재테크</h1>\n<ul>\n<li>각 계절을 구현하는 데는 어려움이 없었으나 처음에 벡터 하나에 나무를 다 저장하고 매번 sort를 해서 시간 초과가 발생했었다.</li>\n<li>고민하다가 각 칸마다 deque에 나무 나이를 담는 식으로 바꿨다.</li>\n<li>vector가 아닌 deque를 선택한 건 가을(번식)때 생성되는 나무는 나이가 1이므로 맨 앞에 추가되어야하기 때문이다.</li>\n<li>vector는 배열이라 맨 앞 추가할 때 O(N)의 시간복잡도가 발생한다.</li>\n<li>deque로 바꿨기에 처음 1번만 sort를 사용하여 효율성을 높였다.</li>\n</ul>\n<pre><code class=\"language-cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;vector&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;algorithm&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;deque&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> MAX 10</span>\n\n<span class=\"hljs-keyword\">int</span> N, M, K;\n<span class=\"hljs-keyword\">int</span> A[MAX][MAX]; <span class=\"hljs-comment\">// 로봇 양분</span>\n<span class=\"hljs-keyword\">int</span> L[MAX][MAX]; <span class=\"hljs-comment\">// 땅</span>\n<span class=\"hljs-built_in\">deque</span>&lt;<span class=\"hljs-keyword\">int</span>&gt; T[MAX][MAX]; <span class=\"hljs-comment\">// 각 땅의 나무 나이</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">addTree</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> r, <span class=\"hljs-keyword\">int</span> c)</span></span>{\n\t<span class=\"hljs-keyword\">if</span> (r &lt; <span class=\"hljs-number\">0</span> || c &lt; <span class=\"hljs-number\">0</span> || r &gt;= N || c &gt;= N) <span class=\"hljs-keyword\">return</span>;\n\tT[r][c].push_front(<span class=\"hljs-number\">1</span>);\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n\t<span class=\"hljs-keyword\">int</span> x, y, age;\n\t<span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">\"%d %d %d\"</span>, &amp;N, &amp;M, &amp;K);\n\t\n\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;N; i++) {\n\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>; j&lt;N; j++) {\n\t\t\t<span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">\"%d\"</span>, &amp;A[i][j]);\n\t\t\tL[i][j] = <span class=\"hljs-number\">5</span>;\n\t\t}\n\t}\n\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;M; i++) {\n\t\t<span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">\"%d %d %d\"</span>, &amp;x, &amp;y, &amp;age);\n\t\tT[--x][--y].push_back(age);\n\t}\n\t\n\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;N; i++) {\n\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>; j&lt;N; j++) {\n\t\t\t<span class=\"hljs-keyword\">if</span> (T[i][j].size() &gt; <span class=\"hljs-number\">1</span>) {\n\t\t\t\tsort(T[i][j].begin(), T[i][j].end());\n\t\t\t}\n\t\t}\n\t}\n\t\n\t<span class=\"hljs-keyword\">bool</span> flag;\n\t<span class=\"hljs-keyword\">while</span>(K-- &gt; <span class=\"hljs-number\">0</span>) {\n\t\t\n\t\t<span class=\"hljs-comment\">// 같은 칸이면 어린 순으로 나이만큼 양분먹고 나이 증가</span>\n\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;N; i++) {\n\t\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>; j&lt;N; j++) {\n\t\t\t\t<span class=\"hljs-built_in\">deque</span>&lt;<span class=\"hljs-keyword\">int</span>&gt; &amp;tmp = T[i][j];\n\t\t\t\tflag = <span class=\"hljs-literal\">true</span>;\n\t\t\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">auto</span> iter=tmp.begin(); iter != tmp.end();) {\n\t\t\t\t\t<span class=\"hljs-keyword\">int</span> &amp;t = *iter;\n\t\t\t\t\t<span class=\"hljs-keyword\">if</span> (L[i][j] &gt;= t &amp;&amp; flag) {\n\t\t\t\t\t\tL[i][j] -= t;\n\t\t\t\t\t\tt += <span class=\"hljs-number\">1</span>;\n\t\t\t\t\t\titer++;\n\t\t\t\t\t} <span class=\"hljs-keyword\">else</span> {\n\t\t\t\t\t\tflag = <span class=\"hljs-literal\">false</span>;\n\t\t\t\t\t\t<span class=\"hljs-comment\">// 여름 처리</span>\n\t\t\t\t\t\tL[i][j] += t / <span class=\"hljs-number\">2</span>;\n\t\t\t\t\t\titer = tmp.erase(iter);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t<span class=\"hljs-comment\">// 나이 5의 배수 나무 번식</span>\n\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;N; i++) {\n\t\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>; j&lt;N; j++) {\n\t\t\t\t<span class=\"hljs-built_in\">deque</span>&lt;<span class=\"hljs-keyword\">int</span>&gt; &amp;tmp = T[i][j];\n\t\t\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">auto</span> iter=tmp.begin(); iter != tmp.end(); iter++) {\n\t\t\t\t\t<span class=\"hljs-keyword\">int</span> t = *iter;\n\t\t\t\t\t<span class=\"hljs-keyword\">if</span> (t % <span class=\"hljs-number\">5</span> == <span class=\"hljs-number\">0</span>) {\n\t\t\t\t\t\taddTree(i - <span class=\"hljs-number\">1</span>, j - <span class=\"hljs-number\">1</span>);\n\t\t\t\t\t\taddTree(i - <span class=\"hljs-number\">1</span>, j);\n\t\t\t\t\t\taddTree(i - <span class=\"hljs-number\">1</span>, j + <span class=\"hljs-number\">1</span>);\n\t\t\t\t\t\taddTree(i, j - <span class=\"hljs-number\">1</span>);\n\t\t\t\t\t\taddTree(i, j + <span class=\"hljs-number\">1</span>);\n\t\t\t\t\t\taddTree(i + <span class=\"hljs-number\">1</span>, j - <span class=\"hljs-number\">1</span>);\n\t\t\t\t\t\taddTree(i + <span class=\"hljs-number\">1</span>, j);\n\t\t\t\t\t\taddTree(i + <span class=\"hljs-number\">1</span>, j + <span class=\"hljs-number\">1</span>);\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t<span class=\"hljs-comment\">// 로봇이 양분 추가</span>\n\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;N; i++) {\n\t\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>; j&lt;N; j++) {\n\t\t\t\tL[i][j] += A[i][j];\n\t\t\t}\n\t\t}\n\t}\n\t\n\t<span class=\"hljs-keyword\">int</span> ans = <span class=\"hljs-number\">0</span>;\n\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;N; i++) {\n\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>; j&lt;N; j++) {\n\t\t\tans += T[i][j].size();\n\t\t}\n\t}\n\t<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">\"%d\"</span>, ans);\n\t\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n</code></pre>\n","updatedAt":"2020-01-28T09:30:37.302Z"}