{"layout":"post-content","title":"백준 - 17837 새로운 게임2(C++)","date":"2020-01-30T00:00:00.000Z","categories":["algorithm"],"body":"<h2>생각의 흐름</h2>\n<ul>\n<li>자료구조는 뭘 사용해야하지?</li>\n<li>체스는 구조체로 정의해서 배열로 저장해야겠고… 보드판 각 칸마다 어떤 체스가 순서대로 있는 지를 표현해야하는 데… 어떤 걸 사용할까?</li>\n<li>앞, 뒤로 pop, push 하고 싶으니깐 deque를 사용해보자…!</li>\n</ul>\n<blockquote>\n<p>다 푼 후,… <br/>\n근데… 다른 사람들 코드를 보니깐 vector를 사용했던 데 나중에 살펴봐야겠다…</p>\n</blockquote>\n<ul>\n<li>구조체 배열을 받을 때는 &amp;를 사용한 참조변수를 사용하자! 그래야 수정도 가능하니깐!</li>\n<li>A말이 위치한 체스칸의 큐에서 뒤부터 하나씩 빼야겠다. 단, A가 나올 때까지만!</li>\n<li>그 다음 뺀 거를 가지고 A말이 이동할 체스칸에 push_back을 해줘야겠지…?</li>\n<li>빨간색은 반대로 넣어줘야하니깐 pop_front, pop_back을 적절히 활용해봐야겠다…</li>\n</ul>\n<pre><code class=\"language-cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;deque&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title\">Horse</span> {</span>\n <span class=\"hljs-keyword\">int</span> row, col, dir;\n};\n\n<span class=\"hljs-keyword\">int</span> N, K;\n<span class=\"hljs-keyword\">int</span> prow[<span class=\"hljs-number\">4</span>] = {<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">1</span>}; <span class=\"hljs-comment\">//우,좌,상,하</span>\n<span class=\"hljs-keyword\">int</span> pcol[<span class=\"hljs-number\">4</span>] = {<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">-1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>};\n\nHorse horse[<span class=\"hljs-number\">10</span>];\n<span class=\"hljs-keyword\">int</span> color[<span class=\"hljs-number\">12</span>][<span class=\"hljs-number\">12</span>];\n<span class=\"hljs-built_in\">deque</span>&lt;<span class=\"hljs-keyword\">int</span>&gt; board[<span class=\"hljs-number\">12</span>][<span class=\"hljs-number\">12</span>];\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">input</span><span class=\"hljs-params\">()</span> </span>{\n <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">\"%d %d\"</span>, &amp;N, &amp;K);\n \n <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;N; i++) {\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j=<span class=\"hljs-number\">0</span>; j&lt;N; j++) {\n   <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">\"%d\"</span>, &amp;color[i][j]);\n  }\n }\n \n <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;K; i++) {\n  <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">\"%d %d %d\"</span>, &amp;horse[i].row, &amp;horse[i].col, &amp;horse[i].dir);\n  horse[i].row--, horse[i].col--, horse[i].dir--;\n  board[horse[i].row][horse[i].col].push_back(i);\n } \n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">move</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> k)</span> </span>{\n Horse &amp;h = horse[k];\n <span class=\"hljs-keyword\">int</span> nextrow = h.row + prow[h.dir];\n <span class=\"hljs-keyword\">int</span> nextcol = h.col + pcol[h.dir];\n \n <span class=\"hljs-comment\">// 범위 밖 or 파란색</span>\n <span class=\"hljs-keyword\">if</span> ((nextrow &lt; <span class=\"hljs-number\">0</span> || nextcol &lt; <span class=\"hljs-number\">0</span> || nextrow &gt;= N || nextcol &gt;= N) || color[nextrow][nextcol] == <span class=\"hljs-number\">2</span>) {\n  <span class=\"hljs-comment\">// 방향 반대로</span>\n  <span class=\"hljs-keyword\">switch</span>(h.dir) {\n   <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:\n    h.dir = <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">break</span>;\n   <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">1</span>:\n    h.dir = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">break</span>;\n   <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">2</span>:\n    h.dir = <span class=\"hljs-number\">3</span>;\n    <span class=\"hljs-keyword\">break</span>;\n   <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">3</span>:\n    h.dir = <span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-keyword\">break</span>;\n   <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">break</span>;\n  }\n  nextrow = h.row + prow[h.dir];\n  nextcol = h.col + pcol[h.dir];\n  \n  <span class=\"hljs-keyword\">if</span> ((nextrow &lt; <span class=\"hljs-number\">0</span> || nextcol &lt; <span class=\"hljs-number\">0</span> || nextrow &gt;= N || nextcol &gt;= N) || color[nextrow][nextcol] == <span class=\"hljs-number\">2</span>) \n   <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n }\n \n <span class=\"hljs-built_in\">deque</span>&lt;<span class=\"hljs-keyword\">int</span>&gt; &amp;q = board[h.row][h.col];\n <span class=\"hljs-built_in\">deque</span>&lt;<span class=\"hljs-keyword\">int</span>&gt; tmpq;\n <span class=\"hljs-keyword\">int</span> tmpk;\n <span class=\"hljs-keyword\">while</span> (!q.empty()) {\n  tmpk = q.back();\n  <span class=\"hljs-comment\">// k말 좌표 이동</span>\n  horse[tmpk].row = nextrow;\n  horse[tmpk].col = nextcol;\n  \n  <span class=\"hljs-comment\">// 원래 큐에서 이동할 말들 빼기</span>\n  tmpq.push_front(tmpk);\n  q.pop_back();\n  \n  <span class=\"hljs-keyword\">if</span> (tmpk == k) <span class=\"hljs-keyword\">break</span>;\n }\n <span class=\"hljs-built_in\">deque</span>&lt;<span class=\"hljs-keyword\">int</span>&gt; &amp;nextq = board[nextrow][nextcol];\n <span class=\"hljs-comment\">// 다음 이동칸이 흰색</span>\n <span class=\"hljs-keyword\">if</span> (color[nextrow][nextcol] == <span class=\"hljs-number\">0</span>) {\n  <span class=\"hljs-keyword\">while</span> (!tmpq.empty()) {\n   nextq.push_back(tmpq.front());\n   tmpq.pop_front();\n  }\n } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (color[nextrow][nextcol] == <span class=\"hljs-number\">1</span>) { <span class=\"hljs-comment\">// 빨간(순서 반대로)</span>\n  <span class=\"hljs-keyword\">while</span> (!tmpq.empty()) {\n   nextq.push_back(tmpq.back());\n   tmpq.pop_back();\n  }\n }\n <span class=\"hljs-keyword\">if</span> (nextq.size() &gt;= <span class=\"hljs-number\">4</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n <span class=\"hljs-keyword\">int</span> ans = <span class=\"hljs-number\">0</span>;\n <span class=\"hljs-keyword\">int</span> i;\n input();\n <span class=\"hljs-keyword\">while</span> (ans++ &lt; <span class=\"hljs-number\">1000</span>) {\n  <span class=\"hljs-keyword\">for</span> (i=<span class=\"hljs-number\">0</span>; i&lt;K; i++) {\n   <span class=\"hljs-keyword\">if</span> (move(i)) <span class=\"hljs-keyword\">break</span>;\n  }\n  <span class=\"hljs-keyword\">if</span> (i &lt; K) <span class=\"hljs-keyword\">break</span>;\n }\n \n <span class=\"hljs-keyword\">if</span> (ans &gt; <span class=\"hljs-number\">1000</span>) ans = <span class=\"hljs-number\">-1</span>;\n <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">\"%d\"</span>, ans);\n <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n</code></pre>\n","updatedAt":"2020-01-30T11:00:37.944Z"}