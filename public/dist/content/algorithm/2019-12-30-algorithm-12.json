{"layout":"post-content","title":"프로그래머스 - lv3 네트워크, lv2 짝지어 제거하기","date":"2019-12-30T00:00:00.000Z","categories":["algorithm"],"body":"<hr>\n<h1># LV3 네트워크</h1>\n<p>각 행을 순회해서 컬럼 값이 1일 때, 해당 col을 row로 하여 또 순회하는 식으로 해결했다.</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">solution</span>(<span class=\"hljs-params\">n, computers</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> answer = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">var</span> arr = [];\n    arr = computers.reduce(<span class=\"hljs-function\">(<span class=\"hljs-params\">acc, cur</span>) =&gt;</span> {\n        acc.push(cur.includes(<span class=\"hljs-number\">1</span>));\n        <span class=\"hljs-keyword\">return</span> acc;\n    }, []);\n    \n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>; i&lt;n; i++) {\n        <span class=\"hljs-keyword\">if</span> (arr[i]) {           \n            dfs(i);\n            answer++;\n        }\n    }\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">row</span>) </span>{\n        <span class=\"hljs-keyword\">if</span> (!arr[row]) <span class=\"hljs-keyword\">return</span>;\n        arr[row] = <span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>; i&lt;n; i++) {            \n            <span class=\"hljs-keyword\">if</span> (computers[row][i] &gt; <span class=\"hljs-number\">0</span>) {\n                computers[row][i] = <span class=\"hljs-number\">0</span>;\n                dfs(i);\n            }        \n        }\n    }\n\n    <span class=\"hljs-keyword\">return</span> answer;\n}\n</code></pre>\n<h1># lv2 짝지어 제거하기</h1>\n<p>스택을 생각해냈으면 쉽게 해결할 수 있다.</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">solution</span>(<span class=\"hljs-params\">s</span>)\n</span>{\n    <span class=\"hljs-keyword\">var</span> stack = [];\n    stack.push(s[<span class=\"hljs-number\">0</span>]);\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">1</span>; i&lt;s.length; i++) {\n        <span class=\"hljs-keyword\">if</span> (stack[stack.length<span class=\"hljs-number\">-1</span>] === s[i]) stack.pop();\n        <span class=\"hljs-keyword\">else</span> stack.push(s[i])\n    }\n    <span class=\"hljs-keyword\">return</span> stack.length ? <span class=\"hljs-number\">0</span> : <span class=\"hljs-number\">1</span>;\n}\n</code></pre>\n","updatedAt":"2020-01-22T18:27:31.522Z"}