{"layout":"post-content","title":"프로그래머스 기지국 설치 javascript","date":"2019-12-10T00:00:00.000Z","categories":["algorithm"],"body":"<h1>문제</h1>\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/12979\">프로그래머스 기지국 설치</a></p>\n<p>아파트의 개수 N, 현재 기지국이 설치된 아파트의 번호가 담긴 1차원 배열 stations, 전파의 도달 거리 W가 매개변수로 주어질 때, 모든 아파트에 전파를 전달하기 위해 증설해야 할 기지국 개수의 최솟값을 리턴하는 solution 함수를 완성하는 문제다.</p>\n<h1>내 풀이</h1>\n<p>떠올린 아이디어는 현재 설치된 기지국의 영향이 끼치는 곳에서 범위를 잘라주는 방식이었다.</p>\n<p>예를 들어 다음과 같이 초기 아파트의 상태가 있다면<br/>\n<img src=\"/assets/images/2019-12-10-img/p1-1.png\" alt=\"1\">  <br/>\n<img src=\"/assets/images/2019-12-10-img/p1-1-1.png\" alt=\"1\">  <br/>\n과 같이 분할을 한다.</p>\n<p>이 경우도 마찬가지다. <br/>\n<img src=\"/assets/images/2019-12-10-img/p1-2-1.png\" alt=\"1\">  <br/>\n<img src=\"/assets/images/2019-12-10-img/p1-2-1.png\" alt=\"1\">  <br/></p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">solution</span>(<span class=\"hljs-params\">n, stations, w</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> answer = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">let</span> s = <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">const</span> func = <span class=\"hljs-function\">(<span class=\"hljs-params\">s, e</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">if</span> (s &gt; e) <span class=\"hljs-keyword\">return</span>;\n        answer++;\n        func(s+w+w+<span class=\"hljs-number\">1</span>, e);\n    }\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i=<span class=\"hljs-number\">0</span>; i&lt;stations.length; i++) {\n        func(s,stations[i]-w<span class=\"hljs-number\">-1</span>);\n        s = stations[i]+w+<span class=\"hljs-number\">1</span>;\n    }\n    func(s,n);\n    <span class=\"hljs-keyword\">return</span> answer;\n}\n</code></pre>\n<h1>다른 사람 풀이</h1>\n<p>재귀 쓸 필요 없이 해당 범위 크기를 (2*w) + 1로 나눈 후 올림한 값을 구하면 그 범위 내 기지국 개수를 알아 낼 수 있다.</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">solution</span>(<span class=\"hljs-params\">n, stations, w</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> answer = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">let</span> s = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span> ; i&lt;stations.length ; i++){\n        <span class=\"hljs-keyword\">var</span> r = stations[i] - w - <span class=\"hljs-number\">1</span>;\n        answer += <span class=\"hljs-built_in\">Math</span>.ceil((r - s) / ((<span class=\"hljs-number\">2</span> * w) + <span class=\"hljs-number\">1</span>));\n        s = stations[i] + w;\n    }\n    answer += <span class=\"hljs-built_in\">Math</span>.ceil((n - s) / ((<span class=\"hljs-number\">2</span> * w) + <span class=\"hljs-number\">1</span>));  \n    <span class=\"hljs-keyword\">return</span> answer;\n}\n</code></pre>\n","updatedAt":"2020-01-22T18:26:31.737Z"}