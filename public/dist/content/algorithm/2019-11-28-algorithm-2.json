{"layout":"post-content","title":"프로그래머스 조이스틱 Javascript","date":"2019-11-28T00:00:00.000Z","categories":["algorithm"],"body":"<h1>문제 설명</h1>\n<p>조이스틱으로 알파벳 이름을 완성하세요. 맨 처음엔 A로만 이루어져 있습니다.<br>\nex) 완성해야 하는 이름이 세 글자면 AAA, 네 글자면 AAAA</p>\n<p>조이스틱을 각 방향으로 움직이면 아래와 같습니다.<br>\n▲ - 다음 알파벳<br>\n▼ - 이전 알파벳 (A에서 아래쪽으로 이동하면 Z로)<br>\n◀ - 커서를 왼쪽으로 이동 (첫 번째 위치에서 왼쪽으로 이동하면 마지막 문자에 커서)<br>\n▶ - 커서를 오른쪽으로 이동</p>\n<p>예를 들어 아래의 방법으로 JAZ를 만들 수 있습니다.</p>\n<ul>\n<li>첫 번째 위치에서 조이스틱을 위로 9번 조작하여 J를 완성합니다.</li>\n<li>조이스틱을 왼쪽으로 1번 조작하여 커서를 마지막 문자 위치로 이동시킵니다.</li>\n<li>마지막 위치에서 조이스틱을 아래로 1번 조작하여 Z를 완성합니다.</li>\n</ul>\n<p>따라서 11번 이동시켜 &quot;JAZ&quot;를 만들 수 있고, 이때가 최소 이동입니다.</p>\n<p>만들고자 하는 이름 name이 매개변수로 주어질 때, 이름에 대해 조이스틱 조작 횟수의 최솟값을 return 하도록 solution 함수를 만드세요.</p>\n<h1>제한 사항</h1>\n<ul>\n<li>name은 알파벳 대문자로만 이루어져 있습니다.</li>\n<li>name의 길이는 1 이상 20 이하입니다.</li>\n</ul>\n<h1>풀이</h1>\n<pre><code class=\"language-javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">solution</span>(<span class=\"hljs-params\">name</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> arrName = <span class=\"hljs-built_in\">Array</span>(name.length).fill(<span class=\"hljs-string\">'A'</span>); <span class=\"hljs-comment\">// 초기값 'A...'로 셋팅해서 name과 같을 때까지 반복 돌림</span>\n    <span class=\"hljs-keyword\">var</span> index = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">// 조작할 인덱스 </span>\n    <span class=\"hljs-keyword\">var</span> answer = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">// 조작 횟수</span>\n    <span class=\"hljs-keyword\">while</span> (arrName.join(<span class=\"hljs-string\">''</span>) !== name) {\n        <span class=\"hljs-comment\">// 현재 인덱스의 알파벳 변경</span>\n        arrName[index] = name[index];\n        <span class=\"hljs-comment\">// 알파벳 조작 횟수</span>\n        answer += alpha(name[index]);\n        <span class=\"hljs-comment\">// 다음에 조작할 인덱스 찾기</span>\n        <span class=\"hljs-keyword\">let</span> obj = findPos(index, name, arrName);\n        <span class=\"hljs-keyword\">if</span> (obj !== <span class=\"hljs-literal\">null</span>) {\n          answer += obj.diff;\n          index = obj.index;\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> answer;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">findPos</span>(<span class=\"hljs-params\">index, name, arrName</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> nextRightIndex = (index + <span class=\"hljs-number\">1</span>) % name.length;\n    <span class=\"hljs-keyword\">var</span> nextLeftIndex = (index - <span class=\"hljs-number\">1</span> + name.length) % name.length;    \n    <span class=\"hljs-keyword\">var</span> moveSize = <span class=\"hljs-number\">1</span>;\n    \n    <span class=\"hljs-comment\">// 최소값을 찾는 거니깐 or로 해서 동시 탐색</span>\n    <span class=\"hljs-comment\">// 'A'가 아니면서 이미 변경처리한 알파벳이 아닌 인덱스 찾기</span>\n    <span class=\"hljs-keyword\">while</span> (nextRightIndex != index || nextLeftIndex != index ) {\n        <span class=\"hljs-keyword\">if</span> (name[nextRightIndex] !== <span class=\"hljs-string\">'A'</span> &amp;&amp; arrName[nextRightIndex] !== name[nextRightIndex]) {\n            <span class=\"hljs-keyword\">return</span> {\n                <span class=\"hljs-attr\">index</span>: nextRightIndex,\n                <span class=\"hljs-attr\">diff</span>: moveSize\n            }\n        }\n        <span class=\"hljs-keyword\">if</span> (name[nextLeftIndex] !== <span class=\"hljs-string\">'A'</span> &amp;&amp; arrName[nextLeftIndex] !== name[nextLeftIndex]) {\n            <span class=\"hljs-keyword\">return</span> {\n                <span class=\"hljs-attr\">index</span>: nextLeftIndex,\n                <span class=\"hljs-attr\">diff</span>: moveSize\n            }\n        }\n        nextRightIndex = (++nextRightIndex) % name.length;\n        nextLeftIndex = (--nextLeftIndex + name.length) % name.length;    \n        moveSize++;\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;\n} \n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">alpha</span>(<span class=\"hljs-params\">n</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Math</span>.min(n.charCodeAt(<span class=\"hljs-number\">0</span>) - <span class=\"hljs-string\">'A'</span>.charCodeAt(<span class=\"hljs-number\">0</span>), <span class=\"hljs-string\">'Z'</span>.charCodeAt(<span class=\"hljs-number\">0</span>) - n.charCodeAt(<span class=\"hljs-number\">0</span>) + <span class=\"hljs-number\">1</span>);\n}\n</code></pre>\n","updatedAt":"2020-01-22T18:26:22.702Z"}